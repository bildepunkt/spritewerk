import doc from "./document";

export default {
    Infinity: Infinity,
    AnalyserNode: ()=> {},
    AnimationEvent: ()=> {},
    AppBannerPromptResult: ()=> {},
    ApplicationCache: ()=> {},
    ApplicationCacheErrorEvent: ()=> {},
    Array: ()=> {},
    ArrayBuffer: ()=> {},
    Attr: ()=> {},
    Audio: ()=> {},
    AudioBuffer: ()=> {},
    AudioBufferSourceNode: ()=> {},
    AudioContext: ()=> {},
    AudioDestinationNode: ()=> {},
    AudioListener: ()=> {},
    AudioNode: ()=> {},
    AudioParam: ()=> {},
    AudioProcessingEvent: ()=> {},
    BarProp: ()=> {},
    BatteryManager: ()=> {},
    BeforeInstallPromptEvent: ()=> {},
    BeforeUnloadEvent: ()=> {},
    BiquadFilterNode: ()=> {},
    Blob: ()=> {},
    BlobEvent: ()=> {},
    Boolean: ()=> {},
    BroadcastChannel: ()=> {},
    ByteLengthQueuingStrategy: ()=> {},
    CDATASection: ()=> {},
    CSS: ()=> {},
    CSSFontFaceRule: ()=> {},
    CSSGroupingRule: ()=> {},
    CSSImportRule: ()=> {},
    CSSKeyframeRule: ()=> {},
    CSSKeyframesRule: ()=> {},
    CSSMediaRule: ()=> {},
    CSSNamespaceRule: ()=> {},
    CSSPageRule: ()=> {},
    CSSRule: ()=> {},
    CSSRuleList: ()=> {},
    CSSStyleDeclaration: ()=> {},
    CSSStyleRule: ()=> {},
    CSSStyleSheet: ()=> {},
    CSSSupportsRule: ()=> {},
    CSSViewportRule: ()=> {},
    Cache: ()=> {},
    CacheStorage: ()=> {},
    CanvasCaptureMediaStreamTrack: ()=> {},
    CanvasGradient: ()=> {},
    CanvasPattern: ()=> {},
    CanvasRenderingContext2D: ()=> {},
    ChannelMergerNode: ()=> {},
    ChannelSplitterNode: ()=> {},
    CharacterData: ()=> {},
    ClientRect: ()=> {},
    ClientRectList: ()=> {},
    ClipboardEvent: ()=> {},
    CloseEvent: ()=> {},
    Comment: ()=> {},
    CompositionEvent: ()=> {},
    ConvolverNode: ()=> {},
    CountQueuingStrategy: ()=> {},
    Credential: ()=> {},
    CredentialsContainer: ()=> {},
    Crypto: ()=> {},
    CryptoKey: ()=> {},
    CustomElementRegistry: ()=> {},
    CustomEvent: ()=> {},
    DOMError: ()=> {},
    DOMException: ()=> {},
    DOMImplementation: ()=> {},
    DOMParser: ()=> {},
    DOMStringList: ()=> {},
    DOMStringMap: ()=> {},
    DOMTokenList: ()=> {},
    DataTransfer: ()=> {},
    DataTransferItem: ()=> {},
    DataTransferItemList: ()=> {},
    DataView: ()=> {},
    Date: ()=> {},
    DelayNode: ()=> {},
    DeviceMotionEvent: ()=> {},
    DeviceOrientationEvent: ()=> {},
    Document: ()=> {},
    DocumentFragment: ()=> {},
    DocumentType: ()=> {},
    DragEvent: ()=> {},
    DynamicsCompressorNode: ()=> {},
    Element: ()=> {},
    Error: ()=> {},
    ErrorEvent: ()=> {},
    EvalError: ()=> {},
    Event: ()=> {},
    EventSource: ()=> {},
    EventTarget: ()=> {},
    FederatedCredential: ()=> {},
    File: ()=> {},
    FileList: ()=> {},
    FileReader: ()=> {},
    Float32Array: ()=> {},
    Float64Array: ()=> {},
    FocusEvent: ()=> {},
    FontFace: ()=> {},
    FormData: ()=> {},
    Function: ()=> {},
    GainNode: ()=> {},
    Gamepad: ()=> {},
    GamepadButton: ()=> {},
    GamepadEvent: ()=> {},
    HTMLAllCollection: ()=> {},
    HTMLAnchorElement: ()=> {},
    HTMLAreaElement: ()=> {},
    HTMLAudioElement: ()=> {},
    HTMLBRElement: ()=> {},
    HTMLBaseElement: ()=> {},
    HTMLBodyElement: ()=> {},
    HTMLButtonElement: ()=> {},
    HTMLCanvasElement: ()=> {},
    HTMLCollection: ()=> {},
    HTMLContentElement: ()=> {},
    HTMLDListElement: ()=> {},
    HTMLDataListElement: ()=> {},
    HTMLDetailsElement: ()=> {},
    HTMLDialogElement: ()=> {},
    HTMLDirectoryElement: ()=> {},
    HTMLDivElement: ()=> {},
    HTMLDocument: ()=> {},
    HTMLElement: ()=> {},
    HTMLEmbedElement: ()=> {},
    HTMLFieldSetElement: ()=> {},
    HTMLFontElement: ()=> {},
    HTMLFormControlsCollection: ()=> {},
    HTMLFormElement: ()=> {},
    HTMLFrameElement: ()=> {},
    HTMLFrameSetElement: ()=> {},
    HTMLHRElement: ()=> {},
    HTMLHeadElement: ()=> {},
    HTMLHeadingElement: ()=> {},
    HTMLHtmlElement: ()=> {},
    HTMLIFrameElement: ()=> {},
    HTMLImageElement: ()=> {},
    HTMLInputElement: ()=> {},
    HTMLKeygenElement: ()=> {},
    HTMLLIElement: ()=> {},
    HTMLLabelElement: ()=> {},
    HTMLLegendElement: ()=> {},
    HTMLLinkElement: ()=> {},
    HTMLMapElement: ()=> {},
    HTMLMarqueeElement: ()=> {},
    HTMLMediaElement: ()=> {},
    HTMLMenuElement: ()=> {},
    HTMLMetaElement: ()=> {},
    HTMLMeterElement: ()=> {},
    HTMLModElement: ()=> {},
    HTMLOListElement: ()=> {},
    HTMLObjectElement: ()=> {},
    HTMLOptGroupElement: ()=> {},
    HTMLOptionElement: ()=> {},
    HTMLOptionsCollection: ()=> {},
    HTMLOutputElement: ()=> {},
    HTMLParagraphElement: ()=> {},
    HTMLParamElement: ()=> {},
    HTMLPictureElement: ()=> {},
    HTMLPreElement: ()=> {},
    HTMLProgressElement: ()=> {},
    HTMLQuoteElement: ()=> {},
    HTMLScriptElement: ()=> {},
    HTMLSelectElement: ()=> {},
    HTMLShadowElement: ()=> {},
    HTMLSlotElement: ()=> {},
    HTMLSourceElement: ()=> {},
    HTMLSpanElement: ()=> {},
    HTMLStyleElement: ()=> {},
    HTMLTableCaptionElement: ()=> {},
    HTMLTableCellElement: ()=> {},
    HTMLTableColElement: ()=> {},
    HTMLTableElement: ()=> {},
    HTMLTableRowElement: ()=> {},
    HTMLTableSectionElement: ()=> {},
    HTMLTemplateElement: ()=> {},
    HTMLTextAreaElement: ()=> {},
    HTMLTitleElement: ()=> {},
    HTMLTrackElement: ()=> {},
    HTMLUListElement: ()=> {},
    HTMLUnknownElement: ()=> {},
    HTMLVideoElement: ()=> {},
    HashChangeEvent: ()=> {},
    Headers: ()=> {},
    History: ()=> {},
    IDBCursor: ()=> {},
    IDBCursorWithValue: ()=> {},
    IDBDatabase: ()=> {},
    IDBFactory: ()=> {},
    IDBIndex: ()=> {},
    IDBKeyRange: ()=> {},
    IDBObjectStore: ()=> {},
    IDBOpenDBRequest: ()=> {},
    IDBRequest: ()=> {},
    IDBTransaction: ()=> {},
    IDBVersionChangeEvent: ()=> {},
    IIRFilterNode: ()=> {},
    IdleDeadline: ()=> {},
    Image: ()=> {},
    ImageBitmap: ()=> {},
    ImageData: ()=> {},
    InputDeviceCapabilities: ()=> {},
    Int8Array: ()=> {},
    Int16Array: ()=> {},
    Int32Array: ()=> {},
    IntersectionObserver: ()=> {},
    IntersectionObserverEntry: ()=> {},
    Intl: Object,
    JSON: null,//JSON
    KeyboardEvent: ()=> {},
    LoadTimeData: ()=> {},
    Location: ()=> {},
    MIDIAccess: ()=> {},
    MIDIConnectionEvent: ()=> {},
    MIDIInput: ()=> {},
    MIDIInputMap: ()=> {},
    MIDIMessageEvent: ()=> {},
    MIDIOutput: ()=> {},
    MIDIOutputMap: ()=> {},
    MIDIPort: ()=> {},
    Map: ()=> {},
    Math: Math,
    MediaDevices: ()=> {},
    MediaElementAudioSourceNode: ()=> {},
    MediaEncryptedEvent: ()=> {},
    MediaError: ()=> {},
    MediaKeyMessageEvent: ()=> {},
    MediaKeySession: ()=> {},
    MediaKeyStatusMap: ()=> {},
    MediaKeySystemAccess: ()=> {},
    MediaKeys: ()=> {},
    MediaList: ()=> {},
    MediaQueryList: ()=> {},
    MediaQueryListEvent: ()=> {},
    MediaRecorder: ()=> {},
    MediaSource: ()=> {},
    MediaStreamAudioDestinationNode: ()=> {},
    MediaStreamAudioSourceNode: ()=> {},
    MediaStreamEvent: ()=> {},
    MediaStreamTrack: ()=> {},
    MessageChannel: ()=> {},
    MessageEvent: ()=> {},
    MessagePort: ()=> {},
    MimeType: ()=> {},
    MimeTypeArray: ()=> {},
    MouseEvent: ()=> {},
    MutationEvent: ()=> {},
    MutationObserver: ()=> {},
    MutationRecord: ()=> {},
    NaN: NaN,
    NamedNodeMap: ()=> {},
    Navigator: ()=> {},
    Node: ()=> {},
    NodeFilter: ()=> {},
    NodeIterator: ()=> {},
    NodeList: ()=> {},
    Notification: ()=> {},
    Number: ()=> {},
    Object: ()=> {},
    OfflineAudioCompletionEvent: ()=> {},
    OfflineAudioContext: ()=> {},
    Option: ()=> {},
    OscillatorNode: ()=> {},
    PageTransitionEvent: ()=> {},
    PasswordCredential: ()=> {},
    Path2D: ()=> {},
    Performance: ()=> {},
    PerformanceEntry: ()=> {},
    PerformanceMark: ()=> {},
    PerformanceMeasure: ()=> {},
    PerformanceNavigation: ()=> {},
    PerformanceObserver: ()=> {},
    PerformanceObserverEntryList: ()=> {},
    PerformanceResourceTiming: ()=> {},
    PerformanceTiming: ()=> {},
    PeriodicWave: ()=> {},
    PermissionStatus: ()=> {},
    Permissions: ()=> {},
    Plugin: ()=> {},
    PluginArray: ()=> {},
    PopStateEvent: ()=> {},
    Presentation: ()=> {},
    PresentationAvailability: ()=> {},
    PresentationConnection: ()=> {},
    PresentationConnectionAvailableEvent: ()=> {},
    PresentationConnectionCloseEvent: ()=> {},
    PresentationRequest: ()=> {},
    ProcessingInstruction: ()=> {},
    ProcessingRoot: undefined,
    ProgressEvent: ()=> {},
    Promise: ()=> {},
    PromiseRejectionEvent: ()=> {},
    Proxy: ()=> {},
    PushManager: ()=> {},
    PushSubscription: ()=> {},
    PushSubscriptionOptions: ()=> {},
    RTCCertificate: ()=> {},
    RTCIceCandidate: ()=> {},
    RTCSessionDescription: ()=> {},
    RadioNodeList: ()=> {},
    Range: ()=> {},
    RangeError: ()=> {},
    ReadableStream: ()=> {},
    ReferenceError: ()=> {},
    Reflect: Object,
    RegExp: ()=> {},
    Request: ()=> {},
    Response: ()=> {},
    SVGAElement: ()=> {},
    SVGAngle: ()=> {},
    SVGAnimateElement: ()=> {},
    SVGAnimateMotionElement: ()=> {},
    SVGAnimateTransformElement: ()=> {},
    SVGAnimatedAngle: ()=> {},
    SVGAnimatedBoolean: ()=> {},
    SVGAnimatedEnumeration: ()=> {},
    SVGAnimatedInteger: ()=> {},
    SVGAnimatedLength: ()=> {},
    SVGAnimatedLengthList: ()=> {},
    SVGAnimatedNumber: ()=> {},
    SVGAnimatedNumberList: ()=> {},
    SVGAnimatedPreserveAspectRatio: ()=> {},
    SVGAnimatedRect: ()=> {},
    SVGAnimatedString: ()=> {},
    SVGAnimatedTransformList: ()=> {},
    SVGAnimationElement: ()=> {},
    SVGCircleElement: ()=> {},
    SVGClipPathElement: ()=> {},
    SVGComponentTransferFunctionElement: ()=> {},
    SVGCursorElement: ()=> {},
    SVGDefsElement: ()=> {},
    SVGDescElement: ()=> {},
    SVGDiscardElement: ()=> {},
    SVGElement: ()=> {},
    SVGEllipseElement: ()=> {},
    SVGFEBlendElement: ()=> {},
    SVGFEColorMatrixElement: ()=> {},
    SVGFEComponentTransferElement: ()=> {},
    SVGFECompositeElement: ()=> {},
    SVGFEConvolveMatrixElement: ()=> {},
    SVGFEDiffuseLightingElement: ()=> {},
    SVGFEDisplacementMapElement: ()=> {},
    SVGFEDistantLightElement: ()=> {},
    SVGFEDropShadowElement: ()=> {},
    SVGFEFloodElement: ()=> {},
    SVGFEFuncAElement: ()=> {},
    SVGFEFuncBElement: ()=> {},
    SVGFEFuncGElement: ()=> {},
    SVGFEFuncRElement: ()=> {},
    SVGFEGaussianBlurElement: ()=> {},
    SVGFEImageElement: ()=> {},
    SVGFEMergeElement: ()=> {},
    SVGFEMergeNodeElement: ()=> {},
    SVGFEMorphologyElement: ()=> {},
    SVGFEOffsetElement: ()=> {},
    SVGFEPointLightElement: ()=> {},
    SVGFESpecularLightingElement: ()=> {},
    SVGFESpotLightElement: ()=> {},
    SVGFETileElement: ()=> {},
    SVGFETurbulenceElement: ()=> {},
    SVGFilterElement: ()=> {},
    SVGForeignObjectElement: ()=> {},
    SVGGElement: ()=> {},
    SVGGeometryElement: ()=> {},
    SVGGradientElement: ()=> {},
    SVGGraphicsElement: ()=> {},
    SVGImageElement: ()=> {},
    SVGLength: ()=> {},
    SVGLengthList: ()=> {},
    SVGLineElement: ()=> {},
    SVGLinearGradientElement: ()=> {},
    SVGMPathElement: ()=> {},
    SVGMarkerElement: ()=> {},
    SVGMaskElement: ()=> {},
    SVGMatrix: ()=> {},
    SVGMetadataElement: ()=> {},
    SVGNumber: ()=> {},
    SVGNumberList: ()=> {},
    SVGPathElement: ()=> {},
    SVGPatternElement: ()=> {},
    SVGPoint: ()=> {},
    SVGPointList: ()=> {},
    SVGPolygonElement: ()=> {},
    SVGPolylineElement: ()=> {},
    SVGPreserveAspectRatio: ()=> {},
    SVGRadialGradientElement: ()=> {},
    SVGRect: ()=> {},
    SVGRectElement: ()=> {},
    SVGSVGElement: ()=> {},
    SVGScriptElement: ()=> {},
    SVGSetElement: ()=> {},
    SVGStopElement: ()=> {},
    SVGStringList: ()=> {},
    SVGStyleElement: ()=> {},
    SVGSwitchElement: ()=> {},
    SVGSymbolElement: ()=> {},
    SVGTSpanElement: ()=> {},
    SVGTextContentElement: ()=> {},
    SVGTextElement: ()=> {},
    SVGTextPathElement: ()=> {},
    SVGTextPositioningElement: ()=> {},
    SVGTitleElement: ()=> {},
    SVGTransform: ()=> {},
    SVGTransformList: ()=> {},
    SVGUnitTypes: ()=> {},
    SVGUseElement: ()=> {},
    SVGViewElement: ()=> {},
    SVGViewSpec: ()=> {},
    Screen: ()=> {},
    ScreenOrientation: ()=> {},
    ScriptProcessorNode: ()=> {},
    SecurityPolicyViolationEvent: ()=> {},
    Selection: ()=> {},
    ServiceWorker: ()=> {},
    ServiceWorkerContainer: ()=> {},
    ServiceWorkerMessageEvent: ()=> {},
    ServiceWorkerRegistration: ()=> {},
    Set: ()=> {},
    ShadowRoot: ()=> {},
    SharedWorker: ()=> {},
    SiteBoundCredential: ()=> {},
    SourceBuffer: ()=> {},
    SourceBufferList: ()=> {},
    SpeechSynthesisEvent: ()=> {},
    SpeechSynthesisUtterance: ()=> {},
    Storage: ()=> {},
    StorageEvent: ()=> {},
    String: ()=> {},
    StyleSheet: ()=> {},
    StyleSheetList: ()=> {},
    SubtleCrypto: ()=> {},
    Symbol: ()=> {},
    SyncManager: ()=> {},
    SyntaxError: ()=> {},
    Text: ()=> {},
    TextDecoder: ()=> {},
    TextEncoder: ()=> {},
    TextEvent: ()=> {},
    TextMetrics: ()=> {},
    TextTrack: ()=> {},
    TextTrackCue: ()=> {},
    TextTrackCueList: ()=> {},
    TextTrackList: ()=> {},
    TimeRanges: ()=> {},
    Touch: ()=> {},
    TouchEvent: ()=> {},
    TouchList: ()=> {},
    TrackEvent: ()=> {},
    TransitionEvent: ()=> {},
    TreeWalker: ()=> {},
    TypeError: ()=> {},
    UIEvent: ()=> {},
    URIError: ()=> {},
    URL: ()=> {},
    URLSearchParams: ()=> {},
    Uint8Array: ()=> {},
    Uint8ClampedArray: ()=> {},
    Uint16Array: ()=> {},
    Uint32Array: ()=> {},
    VTTCue: ()=> {},
    ValidityState: ()=> {},
    WaveShaperNode: ()=> {},
    WeakMap: ()=> {},
    WeakSet: ()=> {},
    WebGLActiveInfo: ()=> {},
    WebGLBuffer: ()=> {},
    WebGLContextEvent: ()=> {},
    WebGLFramebuffer: ()=> {},
    WebGLProgram: ()=> {},
    WebGLRenderbuffer: ()=> {},
    WebGLRenderingContext: ()=> {},
    WebGLShader: ()=> {},
    WebGLShaderPrecisionFormat: ()=> {},
    WebGLTexture: ()=> {},
    WebGLUniformLocation: ()=> {},
    WebKitAnimationEvent: ()=> {},
    WebKitCSSMatrix: ()=> {},
    WebKitMutationObserver: ()=> {},
    WebKitTransitionEvent: ()=> {},
    WebSocket: ()=> {},
    WheelEvent: ()=> {},
    Window: ()=> {},
    Worker: ()=> {},
    XMLDocument: ()=> {},
    XMLHttpRequest: ()=> {},
    XMLHttpRequestEventTarget: ()=> {},
    XMLHttpRequestUpload: ()=> {},
    XMLSerializer: ()=> {},
    XPathEvaluator: ()=> {},
    XPathExpression: ()=> {},
    XPathResult: ()=> {},
    XSLTProcessor: ()=> {},
    addRow: (name, url, isdir, size, size_string, date_modified, date_modified_string)=> {},
    alert: ()=> {},
    applicationCache: null,//ApplicationCache
    atob: ()=> {},
    blur: ()=> {},
    btoa: ()=> {},
    caches: null,//CacheStorage
    cancelAnimationFrame: ()=> {},
    cancelIdleCallback: ()=> {},
    captureEvents: ()=> {},
    chrome: Object,
    clearInterval: ()=> {},
    clearTimeout: ()=> {},
    clientInformation: null,//Navigator
    close: ()=> {},
    closed: false,
    confirm: ()=> {},
    console: Object,
    createCell: (value, text)=> {},
    createImageBitmap: ()=> {},
    crypto: null,//Crypto
    customElements: null,//CustomElementRegistry
    decodeURI: ()=> {},
    decodeURIComponent: ()=> {},
    defaultStatus: "",
    defaultstatus: "",
    devicePixelRatio: 1,
    document: doc,
    encodeURI: ()=> {},
    encodeURIComponent: ()=> {},
    escape: ()=> {},
    eval: ()=> {},
    event: undefined,
    external: null,//External
    fetch: ()=> {},
    find: ()=> {},
    focus: ()=> {},
    frameElement: null,
    frames: null,//Window
    getComputedStyle: ()=> {},
    getMatchedCSSRules: ()=> {},
    getSelection: ()=> {},
    history: null,//History
    i18nTemplate: Object,
    indexedDB: null,//IDBFactory
    innerHeight: 1343,
    innerWidth: 1655,
    isFinite: ()=> {},
    isNaN: ()=> {},
    isSecureContext: true,
    length: 0,
    loadTimeData: null,//LoadTimeData
    localStorage: null,//Storage
    location: null,//Location
    locationbar: null,//BarProp
    matchMedia: ()=> {},
    menubar: null,//BarProp
    moveBy: ()=> {},
    moveTo: ()=> {},
    name: "",
    navigator: null,//Navigator
    offscreenBuffering: true,
    onDragStart: (e)=> {},
    onListingParsingError: ()=> {},
    onabort: null,
    onanimationend: null,
    onanimationiteration: null,
    onanimationstart: null,
    onbeforeunload: null,
    onblur: null,
    oncancel: null,
    oncanplay: null,
    oncanplaythrough: null,
    onchange: null,
    onclick: null,
    onclose: null,
    oncontextmenu: null,
    oncuechange: null,
    ondblclick: null,
    ondevicemotion: null,
    ondeviceorientation: null,
    ondeviceorientationabsolute: null,
    ondrag: null,
    ondragend: null,
    ondragenter: null,
    ondragleave: null,
    ondragover: null,
    ondragstart: null,
    ondrop: null,
    ondurationchange: null,
    onemptied: null,
    onended: null,
    onerror: null,
    onfocus: null,
    onhashchange: null,
    oninput: null,
    oninvalid: null,
    onkeydown: null,
    onkeypress: null,
    onkeyup: null,
    onlanguagechange: null,
    onload: null,
    onloadeddata: null,
    onloadedmetadata: null,
    onloadstart: null,
    onmessage: null,
    onmousedown: null,
    onmouseenter: null,
    onmouseleave: null,
    onmousemove: null,
    onmouseout: null,
    onmouseover: null,
    onmouseup: null,
    onmousewheel: null,
    onoffline: null,
    ononline: null,
    onpagehide: null,
    onpageshow: null,
    onpause: null,
    onplay: null,
    onplaying: null,
    onpopstate: null,
    onprogress: null,
    onratechange: null,
    onrejectionhandled: null,
    onreset: null,
    onresize: null,
    onscroll: null,
    onsearch: null,
    onseeked: null,
    onseeking: null,
    onselect: null,
    onshow: null,
    onstalled: null,
    onstorage: null,
    onsubmit: null,
    onsuspend: null,
    ontimeupdate: null,
    ontoggle: null,
    ontransitionend: null,
    onunhandledrejection: null,
    onunload: null,
    onvolumechange: null,
    onwaiting: null,
    onwebkitanimationend: null,
    onwebkitanimationiteration: null,
    onwebkitanimationstart: null,
    onwebkittransitionend: null,
    onwheel: null,
    open: ()=> {},
    openDatabase: ()=> {},
    opener: null,
    outerHeight: 1417,
    outerWidth: 2558,
    pageXOffset: 0,
    pageYOffset: 0,
    parent: null,//Window
    parseFloat: ()=> {},
    parseInt: ()=> {},
    performance: null,//Performance
    personalbar: null,//BarProp
    postMessage: ()=> {},
    print: ()=> {},
    prompt: ()=> {},
    releaseEvents: ()=> {},
    requestAnimationFrame: ()=> {},
    requestIdleCallback: ()=> {},
    resizeBy: ()=> {},
    resizeTo: ()=> {},
    screen: null,//Screen
    screenLeft: 0,
    screenTop: 23,
    screenX: 0,
    screenY: 23,
    scroll: ()=> {},
    scrollBy: ()=> {},
    scrollTo: ()=> {},
    scrollX: 0,
    scrollY: 0,
    scrollbars: null,//BarProp
    self: null,//Window
    sessionStorage: null,//Storage
    setInterval: ()=> {},
    setTimeout: ()=> {},
    sortTable: (column)=> {},
    speechSynthesis: null,//SpeechSynthesis
    start: (location)=> {},
    status: "",
    statusbar: null,//BarProp
    stop: ()=> {},
    styleMedia: null,//StyleMedia
    toolbar: null,//BarProp
    top: null,//Window
    undefined: undefined,
    unescape: ()=> {},
    webkitAudioContext: ()=> {},
    webkitCancelAnimationFrame: ()=> {},
    webkitCancelRequestAnimationFrame: ()=> {},
    webkitIDBCursor: ()=> {},
    webkitIDBDatabase: ()=> {},
    webkitIDBFactory: ()=> {},
    webkitIDBIndex: ()=> {},
    webkitIDBKeyRange: ()=> {},
    webkitIDBObjectStore: ()=> {},
    webkitIDBRequest: ()=> {},
    webkitIDBTransaction: ()=> {},
    webkitIndexedDB: null,//IDBFactory
    webkitMediaStream: ()=> {},
    webkitOfflineAudioContext: ()=> {},
    webkitRTCPeerConnection: ()=> {},
    webkitRequestAnimationFrame: ()=> {},
    webkitRequestFileSystem: ()=> {},
    webkitResolveLocalFileSystemURL: ()=> {},
    webkitSpeechGrammar: ()=> {},
    webkitSpeechGrammarList: ()=> {},
    webkitSpeechRecognition: ()=> {},
    webkitSpeechRecognitionError: ()=> {},
    webkitSpeechRecognitionEvent: ()=> {},
    webkitStorageInfo: null,//DeprecatedStorageInfo
    webkitURL: ()=> {}
};
